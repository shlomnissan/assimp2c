// Copyright 2024 Betamark Pty Ltd. All rights reserved.
// Author: Shlomi Nissan (shlomi@betamark.com)

#include "writer.h"

#include <fstream>

#include <fmt/format.h>

namespace assimp2c {
    Writer::Writer(std::string_view name) : name_(name) {}

    auto Writer::setVertices(const std::vector<std::vector<float>>& vertices) -> void {
        vertices_ = vertices;
    }

    auto Writer::setIndices(const std::vector<std::vector<unsigned int>>& indices) -> void {
        indices_ = indices;
    }

    auto Writer::Write(std::string_view filename) const -> void {
        if (vertices_.empty()) {
            throw WriterError {"Error: No vertices to write"};
        }

        auto file_handle = std::ofstream(filename.data());
        if (!file_handle.is_open()) {
            throw WriterError {
                fmt::format("Error: Unable to open file {} for writing", filename)
            };
        }

        file_handle << fmt::format("// This file was generated by assimp2c\n");
        file_handle << fmt::format("// https://github.com/shlomnissan/assimp2c\n\n");

        file_handle.close();
    }
}